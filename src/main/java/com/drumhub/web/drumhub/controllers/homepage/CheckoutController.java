package com.drumhub.web.drumhub.controllers.homepage;

import com.drumhub.web.drumhub.models.Cart;
import com.drumhub.web.drumhub.models.CartItem;
import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import jakarta.servlet.http.HttpSession;

import java.io.IOException;
import java.util.List;

@WebServlet("/checkout")
public class CheckoutController extends HttpServlet {

    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        HttpSession session = request.getSession();
        Cart cart = (Cart) session.getAttribute("cart");

        List<CartItem> cartItems = (cart != null) ? cart.getItems() : List.of();
        double totalPrice = (cart != null) ? cart.getTotal() : 0.0;

        request.setAttribute("cartItems", cartItems);
        request.setAttribute("totalPrice", totalPrice);

        // Hi·ªÉn th·ªã th√¥ng b√°o n·∫øu c√≥
        String message = (String) session.getAttribute("message");
        if (message != null) {
            request.setAttribute("message", message);
            session.removeAttribute("message"); // X√≥a sau khi hi·ªÉn th·ªã
        }

        request.setAttribute("title", "Thanh To√°n");
        request.setAttribute("content", "checkout.jsp");
        request.getRequestDispatcher("/pages/homepage/layout.jsp").forward(request, response);
    }

    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        HttpSession session = request.getSession();
        Cart cart = (Cart) session.getAttribute("cart");

        if (cart == null || cart.getItems().isEmpty()) {
            session.setAttribute("message", "Gi·ªè h√†ng c·ªßa b·∫°n ƒëang tr·ªëng!");
            response.sendRedirect("/checkout");
            return;
        }

        // L·∫•y th√¥ng tin t·ª´ form
        String fullName = request.getParameter("fullName");
        String address = request.getParameter("address");
        String phone = request.getParameter("phone");
        String paymentMethod = request.getParameter("paymentMethod");

        // Ki·ªÉm tra d·ªØ li·ªáu nh·∫≠p v√†o
        if (fullName == null || fullName.trim().isEmpty() ||
                address == null || address.trim().isEmpty() ||
                phone == null || phone.trim().isEmpty() ||
                paymentMethod == null || paymentMethod.trim().isEmpty()) {

            session.setAttribute("message", "Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß th√¥ng tin.");
            response.sendRedirect("/checkout");
            return;
        }

        // X·ª≠ l√Ω ƒë∆°n h√†ng
        boolean orderSuccess = saveOrder(fullName, address, phone, paymentMethod, cart);

        if (orderSuccess) {
            session.removeAttribute("cart"); // X√≥a gi·ªè h√†ng sau khi ƒë·∫∑t h√†ng th√†nh c√¥ng
            session.setAttribute("message", "üéâ B·∫°n ƒë√£ ƒë·∫∑t h√†ng th√†nh c√¥ng!"); // L∆∞u th√¥ng b√°o v√†o session
            response.sendRedirect("/home"); // Chuy·ªÉn h∆∞·ªõng v·ªÅ trang ch·ªß
        } else {
            session.setAttribute("message", "C√≥ l·ªói x·∫£y ra khi ƒë·∫∑t h√†ng. Vui l√≤ng th·ª≠ l·∫°i.");
            response.sendRedirect("/checkout");
        }
    }



    private boolean saveOrder(String fullName, String address, String phone, String paymentMethod, Cart cart) {
        if (cart.getItems().isEmpty()) {
            return false;
        }

        // Gi·∫£ l·∫≠p x·ª≠ l√Ω ƒë∆°n h√†ng - Sau n√†y c√≥ th·ªÉ thay th·∫ø b·∫±ng database
        System.out.println("ƒê∆°n h√†ng ƒë∆∞·ª£c t·∫°o:");
        System.out.println("Kh√°ch h√†ng: " + fullName);
        System.out.println("ƒê·ªãa ch·ªâ: " + address);
        System.out.println("S·ªë ƒëi·ªán tho·∫°i: " + phone);
        System.out.println("Ph∆∞∆°ng th·ª©c thanh to√°n: " + paymentMethod);
        System.out.println("S·∫£n ph·∫©m trong ƒë∆°n h√†ng:");
        for (CartItem item : cart.getItems()) {
            System.out.println("- " + item.getProduct().getName() + " | S·ªë l∆∞·ª£ng: " + item.getQuantity());
        }
        return true;
    }

    private boolean isEmpty(String str) {
        return str == null || str.trim().isEmpty();
    }
}
